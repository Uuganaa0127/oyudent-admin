"use client";

import { useState } from "react";

// import Link from "next/link";
import signUpUser  from "@/apiService/apiService"; // ‚úÖ Import API function

export function SignUp  ()  {
  const [formData, setFormData] = useState({
    firstname: "",
    lastname: "",
    register: "",
    email: "",
    phone: "",
    password: "",
    passwordMatch: "",
  });

  const [loading, setLoading] = useState(false);
  const [client,setClient]=useState(false);
  const [message, setMessage] = useState("");

  // ‚úÖ Handle input changes
  const handleChange = () => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  // ‚úÖ Validate input fields before submission
  const validateInputs = () => {
    const registerRegex = /^[A-Za-z–ê-–Ø–∞-—è“Æ“Ø”®”©]{2}\d{8}$/;
    const phoneRegex = /^\d{8}$/; // üî• Exactly 8 digits
    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;

    if (!registerRegex.test(formData.register)) {
      return "–†–µ–≥–∏—Å—Ç–µ—Ä 2 “Ø—Å—ç–≥ + 8 —Ç–æ–æ –±–∞–π—Ö —ë—Å—Ç–æ–π. (–ñ–∏—à—ç—ç: AB12345678)";
    }
    if (!phoneRegex.test(formData.phone)) {
      return "–£—Ç–∞—Å–Ω—ã –¥—É–≥–∞–∞—Ä 8 –æ—Ä–æ–Ω—Ç–æ–π –±–∞–π—Ö —ë—Å—Ç–æ–π.";
    }
    if (formData.password.length < 8) {
      return "–ù—É—É—Ü “Ø–≥ —Ö–∞–º–≥–∏–π–Ω –±–∞–≥–∞–¥–∞–∞ 8 —Ç—ç–º–¥—ç–≥—Ç –±–∞–π—Ö —ë—Å—Ç–æ–π.";
    }
    if (!emailRegex.test(formData.email)) {
      return "–ò–º—ç–π–ª —Ö–∞—è–≥ –∑”©–≤ –æ—Ä—É—É–ª–Ω–∞ —É—É. (–ñ–∏—à—ç—ç: example@example.com)";
    }
    if (formData.password !== formData.passwordMatch) {
      return "–ù—É—É—Ü “Ø–≥ —Ç–æ—Ö–∏—Ä–æ—Ö–≥“Ø–π –±–∞–π–Ω–∞.";
    }
    return null; // ‚úÖ No errors
  };

  // ‚úÖ Handle form submission
  const handleSubmit = async () => {
    e.preventDefault();
    setLoading(true);
    setMessage("");

    const validationError = validateInputs();
    if (validationError) {
      setMessage(validationError);
      setLoading(false);
      return;
    }

    try {
      const response = await signUpUser(formData,client);
      const x = response.json();
      console.log(x);

      setMessage("–ë“Ø—Ä—Ç–≥—ç–ª –∞–º–∂–∏–ª—Ç—Ç–∞–π —Ö–∏–π–≥–¥–ª—ç—ç! üéâ");
    } catch  {
      setMessage(error.message || "–ë“Ø—Ä—Ç–≥—ç–ª –∞–º–∂–∏–ª—Ç–≥“Ø–π –±–æ–ª–ª–æ–æ.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <>
      {/* <Breadcrumb title={"Signup"} pages={["Signup"]} /> */}
      <section className="overflow-hidden py-20 bg-gray-2">
        <div className="max-w-[1170px] w-full mx-auto px-4 sm:px-8 xl:px-0">
          <div className="max-w-[570px] w-full mx-auto rounded-xl bg-white shadow-1 p-4 sm:p-7.5 xl:p-11">
          <div className="flex gap-4">
        <button
          onClick={() => setClient(true)}
          className={`w-full flex justify-center font-medium text-black py-3 px-6 rounded-lg transition-all duration-300 
      ${
        client
          ? "bg-blue-600 shadow-lg scale-105"
          : "bg-gray-500 hover:bg-blue-500"
      }`}
        >
        User
        </button>
        <button
          onClick={() => setClient(false)}
          className={`w-full flex justify-center font-medium text-black py-3 px-6 rounded-lg transition-all duration-300 
      ${
        !client
          ? "bg-blue-600 shadow-lg scale-105"
          : "bg-gray-500 hover:bg-blue-500"
      }`}
        >
     Client
        </button>
      </div>

            <div className="mt-5.5">
              <form onSubmit={handleSubmit}>
                <div className="mb-5">
                  <label htmlFor="lastname" className="block mb-2.5">
                    –û–≤–æ–≥ <span className="text-red">*</span>
                  </label>
                  <input
                    type="text"
                    name="lastname"
                    id="lastname"
                    placeholder="–û–≤–æ–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É"
                    value={formData.lastname}
                    onChange={handleChange}
                    required
                    className="rounded-lg border border-gray-3 bg-gray-1 w-full py-3 px-5 outline-none duration-200 focus:ring-2 focus:ring-blue/20"
                  />
                </div>

                <div className="mb-5">
                  <label htmlFor="firstname" className="block mb-2.5">
                    –ù—ç—Ä <span className="text-red">*</span>
                  </label>
                  <input
                    type="text"
                    name="firstname"
                    id="firstname"
                    placeholder="–ù—ç—Ä –æ—Ä—É—É–ª–Ω–∞ —É—É"
                    value={formData.firstname}
                    onChange={handleChange}
                    required
                    className="rounded-lg border border-gray-3 bg-gray-1 w-full py-3 px-5 outline-none duration-200 focus:ring-2 focus:ring-blue/20"
                  />
                </div>
{client?  <div className="mb-5">
                  <label htmlFor="register" className="block mb-2.5">
                    –†–µ–≥–∏—Å—Ç–µ—Ä <span className="text-red">*</span>
                  </label>
                  <input
                    type="text"
                    name="register"
                    id="register"
                    placeholder="AB12345678"
                    value={formData.register}
                    onChange={handleChange}
                    required
                    className="rounded-lg border border-gray-3 bg-gray-1 w-full py-3 px-5 outline-none duration-200 focus:ring-2 focus:ring-blue/20"
                  />
                </div>:<></>}
               

                <div className="mb-5">
                  <label htmlFor="phone" className="block mb-2.5">
                    –£—Ç–∞—Å–Ω—ã –¥—É–≥–∞–∞—Ä <span className="text-red">*</span>
                  </label>
                  <input
                    type="text"
                    name="phone"
                    id="phone"
                    placeholder="88887777"
                    value={formData.phone}
                    onChange={handleChange}
                    required
                    className="rounded-lg border border-gray-3 bg-gray-1 w-full py-3 px-5 outline-none duration-200 focus:ring-2 focus:ring-blue/20"
                  />
                </div>
                <div className="mb-5">
                  <label htmlFor="phone" className="block mb-2.5">
                    –ò-–º—ç–π–ª —Ö–∞—è–≥ <span className="text-red">*</span>
                  </label>
                  <input
                    type="text"
                    name="email"
                    id="Email"
                    placeholder="john.doe@gmail.com"
                    value={formData.email}
                    onChange={handleChange}
                    required
                    className="rounded-lg border border-gray-3 bg-gray-1 w-full py-3 px-5 outline-none duration-200 focus:ring-2 focus:ring-blue/20"
                  />
                </div>

                <div className="mb-5">
                  <label htmlFor="password" className="block mb-2.5">
                    –ù—É—É—Ü “Ø–≥ <span className="text-red">*</span>
                  </label>
                  <input
                    type="password"
                    name="password"
                    id="password"
                    placeholder="Enter your password"
                    value={formData.password}
                    onChange={handleChange}
                    required
                    className="rounded-lg border border-gray-3 bg-gray-1 w-full py-3 px-5 outline-none duration-200 focus:ring-2 focus:ring-blue/20"
                  />
                </div>

                <div className="mb-5">
                  <label htmlFor="passwordMatch" className="block mb-2.5">
                    –ù—É—É—Ü “Ø–≥—ç—ç –¥–∞–≤—Ç–Ω–∞ —É—É <span className="text-red">*</span>
                  </label>
                  <input
                    type="password"
                    name="passwordMatch"
                    id="passwordMatch"
                    placeholder="Re-type your password"
                    value={formData.passwordMatch}
                    onChange={handleChange}
                    required
                    className="rounded-lg border border-gray-3 bg-gray-1 w-full py-3 px-5 outline-none duration-200 focus:ring-2 focus:ring-blue/20"
                  />
                </div>

                <button
                  type="submit"
                  disabled={loading}
                  className="w-full flex justify-center font-medium text-white bg-dark py-3 px-6 rounded-lg ease-out duration-200 hover:bg-blue mt-7.5"
                >
                  {loading ? "–ë“Ø—Ä—Ç–≥—ç–∂ –±–∞–π–Ω–∞..." : "–ë“Ø—Ä—Ç–≥“Ø“Ø–ª—ç—Ö"}
                </button>

                {message && (
                  <p className="text-center text-red-600 mt-4">{message}</p>
                )}

                <p className="text-center mt-6">
                  –¢–∞ ”©”©—Ä–∏–π–Ω –±“Ø—Ä—Ç–≥—ç–ª—Ç—ç–π —é—É?
                  <Link
                    href="/signin"
                    className="text-dark ease-out duration-200 hover:text-blue pl-2"
                  >
                    –ù—ç–≤—Ç—Ä—ç—Ö
                  </Link>
                </p>
              </form>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};


export default SignUp;